{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/error-interceptor.ts","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/error/error.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/posts/post-create/mime-type.validator.ts","webpack:///./src/app/posts/post-create/post-create.component.css","webpack:///./src/app/posts/post-create/post-create.component.html","webpack:///./src/app/posts/post-create/post-create.component.ts","webpack:///./src/app/posts/post-list/post-list.component.css","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/posts.module.ts","webpack:///./src/app/posts/posts.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatDialogModule\n} from \"@angular/material\";\n\n@NgModule({\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule,\n  ]\n})\nexport class AngularMaterialModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\nimport { LoginComponent } from \"./auth/login/login.component\";\nimport { SignupComponent } from \"./auth/signup/signup.component\";\nimport { AuthGuard } from \"./auth/auth.guard\";\n\nconst routes: Routes = [\n  { path: \"\", component: PostListComponent },\n  { path: \"create\", component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: \"edit/:postId\", component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignupComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule {}\n","module.exports = \"main {\\n  width: 80%;\\n  margin: 1rem auto;\\n}\\n\"","module.exports = \"<app-header></app-header>\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\"","import { Component, OnInit, } from \"@angular/core\";\n// import { Subscription } from \"rxjs\";\n\nimport { AuthService } from \"./auth/auth.service\";\n// import { ErrorService } from \"./error/error.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  // hasError = false;\n  // private errorSub: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    // private errorService: ErrorService\n  ) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n    // this.errorSub = this.errorService.getErrorListener().subscribe(\n    //   message => this.hasError = message !== null\n    // );\n  }\n\n  // ngOnDestroy() {\n  //   this.errorSub.unsubscribe();\n  // }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { AppComponent } from \"./app.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AuthInterceptor } from \"./auth/auth-interceptor\";\nimport { ErrorInterceptor } from \"./error-interceptor\";\nimport { ErrorComponent } from \"./error/error.component\";\nimport { AngularMaterialModule } from \"./angular-material.module\";\nimport { PostsModule } from \"./posts/posts.module\";\nimport { AuthModule } from \"./auth/auth.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostsModule,\n    AuthModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule {}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { LoginComponent } from \"./login/login.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { AngularMaterialModule } from \"../angular-material.module\";\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    FormsModule\n  ]\n})\nexport class AuthModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\n\nimport { AuthData } from \"./auth-data.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private authStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post(\"http://localhost:3000/api/user/signup\", authData)\n      .subscribe(() => {\n        this.router.navigate([\"/\"]);\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post<{ token: string; expiresIn: number; userId: string }>(\n        \"http://localhost:3000/api/user/login\",\n        authData\n      )\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(\n            now.getTime() + expiresInDuration * 1000\n          );\n          console.log(expirationDate);\n          this.saveAuthData(token, expirationDate, this.userId);\n          this.router.navigate([\"/\"]);\n        }\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate([\"/\"]);\n  }\n\n  private setAuthTimer(duration: number) {\n    console.log(\"Setting timer: \" + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n    localStorage.setItem(\"userId\", userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem(\"token\");\n    const expirationDate = localStorage.getItem(\"expiration\");\n    const userId = localStorage.getItem(\"userId\");\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    };\n  }\n}\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field>\\n      <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-Mail\\\" #emailInput=\\\"ngModel\\\" required email>\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input type=\\\"password\\\" name=\\\"password\\\" ngModel matInput placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Login</button>\\n  </form>\\n</mat-card>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field>\\n      <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-Mail\\\" #emailInput=\\\"ngModel\\\" required email>\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input type=\\\"password\\\" name=\\\"password\\\" ngModel matInput placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Signup</button>\\n  </form>\\n</mat-card>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from \"@angular/common/http\";\nimport { catchError } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material\";\n\nimport { ErrorComponent } from \"./error/error.component\";\nimport { ErrorService } from \"./error/error.service\";\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog, private errorService: ErrorService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = \"An unknown error occurred!\";\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n        // this.errorService.throwError(errorMessage);\n        return throwError(error);\n      })\n    );\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>An Error Occurred!</h1>\\n<div mat-dialog-content>\\n  <p class=\\\"mat-body-1\\\">{{ data?.message }}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button mat-dialog-close>Okay</button>\\n</div>\\n\"","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from \"@angular/material\";\n// import { Subscription } from \"rxjs\";\n\n// import { ErrorService } from \"./error.service\";\n\n@Component({\n  templateUrl: \"./error.component.html\",\n  selector: \"app-error\",\n  // styleUrls: [\"./error.component.css\"]\n})\nexport class ErrorComponent {\n  // data: { message: string };\n  // private errorSub: Subscription;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) {}\n  // constructor(private errorService: ErrorService) {}\n\n  // ngOnInit() {\n  //   this.errorSub = this.errorService.getErrorListener().subscribe(message => {\n  //     this.data = { message: message };\n  //   });\n  // }\n\n  // onHandleError() {\n  //   this.errorService.handleError();\n  // }\n\n  // ngOnDestroy() {\n  //   this.errorSub.unsubscribe();\n  // }\n}\n","import { Subject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ErrorService {\n  private errorListener = new Subject<string>();\n\n  getErrorListener() {\n    return this.errorListener.asObservable();\n  }\n\n  throwError(message: string) {\n    this.errorListener.next(message);\n  }\n\n  handleError() {\n    this.errorListener.next(null);\n  }\n}\n","module.exports = \"ul {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: white;\\n}\\n\\nul {\\n  display: flex;\\n}\\n\\n.spacer {\\n  flex: 1 1 auto;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>\\n    <a routerLink=\\\"/\\\" routerLinkActive=\\\"mat-accent\\\">MyPosts</a>\\n  </span>\\n  <span class=\\\"spacer\\\"></span>\\n  <ul>\\n    <li *ngIf=\\\"userIsAuthenticated\\\">\\n      <a mat-button routerLink=\\\"/create\\\" routerLinkActive=\\\"mat-accent\\\">New Post</a>\\n    </li>\\n    <li *ngIf=\\\"!userIsAuthenticated\\\">\\n      <a mat-button routerLink=\\\"/login\\\" routerLinkActive=\\\"mat-accent\\\">Login</a>\\n    </li>\\n    <li *ngIf=\\\"!userIsAuthenticated\\\">\\n      <a mat-button routerLink=\\\"/signup\\\" routerLinkActive=\\\"mat-accent\\\">Signup</a>\\n    </li>\\n    <li *ngIf=\\\"userIsAuthenticated\\\">\\n      <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\n    </li>\\n  </ul>\\n</mat-toolbar>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { AuthService } from \"../auth/auth.service\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"]\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","module.exports = \"mat-form-field,\\ntextarea {\\n  width: 100%;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\\ninput[type=\\\"file\\\"] {\\n  visibility: hidden;\\n}\\n\\n.image-preview {\\n  height: 5rem;\\n  margin: 1rem 0;\\n}\\n\\n.image-preview img {\\n  height: 100%;\\n}\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSavePost()\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field>\\n      <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"Post Title\\\">\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter a post title.</mat-error>\\n    </mat-form-field>\\n    <div>\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\n    </div>\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !== '' && imagePreview && form.get('image').valid\\\">\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\">\\n    </div>\\n    <mat-form-field>\\n      <textarea matInput rows=\\\"4\\\" formControlName=\\\"content\\\" placeholder=\\\"Post Content\\\"></textarea>\\n      <mat-error *ngIf=\\\"form.get('content').invalid\\\">Please enter a post title.</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">Save Post</button>\\n  </form>\\n</mat-card>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\nimport { PostsService } from \"../posts.service\";\nimport { Post } from \"../post.model\";\nimport { mimeType } from \"./mime-type.validator\";\nimport { AuthService } from \"../../auth/auth.service\";\n\n@Component({\n  selector: \"app-post-create\",\n  templateUrl: \"./post-create.component.html\",\n  styleUrls: [\"./post-create.component.css\"]\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  enteredTitle = \"\";\n  enteredContent = \"\";\n  post: Post;\n  isLoading = false;\n  form: FormGroup;\n  imagePreview: string;\n  private mode = \"create\";\n  private postId: string;\n  private authStatusSub: Subscription;\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator\n          };\n          this.form.setValue({\n            title: this.post.title,\n            content: this.post.content,\n            image: this.post.imagePath\n          });\n        });\n      } else {\n        this.mode = \"create\";\n        this.postId = null;\n      }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get(\"image\").updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    }\n    this.form.reset();\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\\nmat-paginator {\\n  margin-top: 1rem;\\n}\\n\\n.info-text {\\n  text-align: center;\\n}\\n\\n.post-image {\\n  width: 100%;\\n}\\n\\n.post-image img {\\n  width: 100%;\\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\\n}\\n\"","module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length > 0 && !isLoading\\\">\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\n    <mat-expansion-panel-header>\\n      {{ post.title }}\\n    </mat-expansion-panel-header>\\n    <div class=\\\"post-image\\\">\\n      <img [src]=\\\"post.imagePath\\\" [alt]=\\\"post.title\\\">\\n    </div>\\n    <p>{{ post.content }}</p>\\n    <mat-action-row *ngIf=\\\"userIsAuthenticated && userId === post.creator\\\">\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/edit', post.id]\\\">EDIT</a>\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(post.id)\\\">DELETE</button>\\n    </mat-action-row>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n<mat-paginator [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\"\\n  *ngIf=\\\"posts.length > 0\\\"></mat-paginator>\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"posts.length <= 0 && !isLoading\\\">No posts added yet!</p>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { PageEvent } from \"@angular/material\";\nimport { Subscription } from \"rxjs\";\n\nimport { Post } from \"../post.model\";\nimport { PostsService } from \"../posts.service\";\nimport { AuthService } from \"../../auth/auth.service\";\n\n@Component({\n  selector: \"app-post-list\",\n  templateUrl: \"./post-list.component.html\",\n  styleUrls: [\"./post-list.component.css\"]\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  // posts = [\n  //   { title: \"First Post\", content: \"This is the first post's content\" },\n  //   { title: \"Second Post\", content: \"This is the second post's content\" },\n  //   { title: \"Third Post\", content: \"This is the third post's content\" }\n  // ];\n  posts: Post[] = [];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 2;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n\n  constructor(\n    public postsService: PostsService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    this.postsSub = this.postsService\n      .getPostUpdateListener()\n      .subscribe((postData: { posts: Post[]; postCount: number }) => {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { PostCreateComponent } from \"./post-create/post-create.component\";\nimport { PostListComponent } from \"./post-list/post-list.component\";\nimport { AngularMaterialModule } from \"../angular-material.module\";\n\n@NgModule({\n  declarations: [PostCreateComponent, PostListComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ]\n})\nexport class PostsModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\nimport { Post } from \"./post.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<{ posts: Post[]; postCount: number }>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    this.http\n      .get<{ message: string; posts: any; maxPosts: number }>(\n        \"http://localhost:3000/api/posts\" + queryParams\n      )\n      .pipe(\n        map(postData => {\n          return {\n            posts: postData.posts.map(post => {\n              return {\n                title: post.title,\n                content: post.content,\n                id: post._id,\n                imagePath: post.imagePath,\n                creator: post.creator\n              };\n            }),\n            maxPosts: postData.maxPosts\n          };\n        })\n      )\n      .subscribe(transformedPostData => {\n        this.posts = transformedPostData.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          postCount: transformedPostData.maxPosts\n        });\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http.get<{\n      _id: string;\n      title: string;\n      content: string;\n      imagePath: string;\n      creator: string;\n    }>(\"http://localhost:3000/api/posts/\" + id);\n  }\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append(\"title\", title);\n    postData.append(\"content\", content);\n    postData.append(\"image\", image, title);\n    this.http\n      .post<{ message: string; post: Post }>(\n        \"http://localhost:3000/api/posts\",\n        postData\n      )\n      .subscribe(responseData => {\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof image === \"object\") {\n      postData = new FormData();\n      postData.append(\"id\", id);\n      postData.append(\"title\", title);\n      postData.append(\"content\", content);\n      postData.append(\"image\", image, title);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(\"http://localhost:3000/api/posts/\" + id, postData)\n      .subscribe(response => {\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(\"http://localhost:3000/api/posts/\" + postId);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}